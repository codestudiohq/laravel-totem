@alert-close-opacity: 0.4;
@alert-close-hover-opacity: 0.8;
@alert-border-width: 0;
@alert-border: transparent;
@alert-primary-border: transparent;
@alert-success-border: transparent;
@alert-warning-border: transparent;
@alert-danger-border: transparent;
@alert-border-radius: 0;
@alert-box-shadow: none;
@alert-background: @global-background;
@alert-color: @global-emphasis-color;
@alert-primary-background: @alert-background;
@alert-success-background: @alert-background;
@alert-warning-background: @alert-background;
@alert-danger-background: @alert-background;
@alert-border-radius: @global-border-radius;
@alert-box-shadow: @global-medium-box-shadow;

.hook-alert-close() {
  color: inherit;
  opacity: @alert-close-opacity;
}

.hook-alert-close-hover() {
  color: inherit;
  opacity: @alert-close-hover-opacity;
}

.hook-alert-misc() {
  .uk-alert h1,
  .uk-alert h2,
  .uk-alert h3,
  .uk-alert h4,
  .uk-alert h5,
  .uk-alert h6 {
    color: inherit;
  }

  .uk-alert a:not([class]) {
    color: inherit;
    text-decoration: underline;
  }

  .uk-alert a:not([class]):hover {
    color: inherit;
    text-decoration: underline;
  }

}

.hook-alert() when not (@alert-border-width = 0) {
  border: @alert-border-width solid @alert-border;
}

.hook-alert-primary() when not (@alert-border-width = 0) {
  border-color: @alert-primary-border;
}

.hook-alert-success() when not (@alert-border-width = 0) {
  border-color: @alert-success-border;
}

.hook-alert-warning() when not (@alert-border-width = 0) {
  border-color: @alert-warning-border;
}

.hook-alert-danger() when not (@alert-border-width = 0) {
  border-color: @alert-danger-border;
}

.hook-alert() when not (@alert-border-radius = 0) {
  border-radius: @alert-border-radius;
}

.hook-alert() when not (@alert-box-shadow = none) {
  box-shadow: @alert-box-shadow;
}